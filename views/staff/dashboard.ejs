<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Staff Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#3B82F6',
            secondary: '#8B5CF6',
            accent: '#10B981',
            dark: '#1F2937',
          },
          animation: {
            'fade-in': 'fadeIn 0.5s ease-in-out',
            'slide-up': 'slideUp 0.3s ease-out',
            'pulse-slow': 'pulse 3s infinite',
          }
        }
      }
    }
  </script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/stylesheets/staffDashboard.css">
</head>

<body>
  <nav class="bg-white/80 backdrop-blur-md shadow-lg border-b border-gray-200 sticky top-0 z-50" pb-4>
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center h-16">
        <div class="flex items-center space-x-3">
          <div class="bg-gradient-to-r from-blue-500 to-purple-600 p-2 rounded-lg">
            <i class="fas fa-graduation-cap text-white text-xl"></i>
          </div>
          <h1 class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            Staff Portal
          </h1>
        </div>
        <div class="flex items-center space-x-4">
          <button class="p-2 rounded-full hover:bg-gray-100 transition-colors">
            <i class="fas fa-bell text-gray-600"></i>
          </button>
          <div>
            <a href="/logout"
              class="px-4 py-2 bg-red-500 text-white rounded-md shadow hover:bg-red-600 transition">Logout</a>
          </div>
        </div>
      </div>
    </div>
  </nav>

    <!-- <%- include("../MainPartials/NavBar", { userType: userType }) %> -->

  
  <div class="container ">
    <!-- Statistics Cards -->
    <div class="stats-grid">
      <div class="stat-card pending">
        <div class="stat-info">
          <h3>Pending Documents</h3>
          <div class="number">3</div>
        </div>
        <div class="stat-icon">⏰</div>
      </div>

      <div class="stat-card verified">
        <div class="stat-info">
          <h3>Verified Documents</h3>
          <div class="number">2</div>
        </div>
        <div class="stat-icon">✅</div>
      </div>

      <div class="stat-card total">
        <div class="stat-info">
          <h3>Total Students</h3>
          <div class="number">156</div>
        </div>
        <div class="stat-icon">🎓</div>
      </div>

      <div class="stat-card month">
        <div class="stat-info">
          <h3>This Month</h3>
          <div class="number">89</div>
        </div>
        <div class="stat-icon">📅</div>
      </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="nav-tabs">
      <a href="#" class="nav-tab active" data-tab="masterDB-documents">
        📤 Upload Document To MasterDB
      </a>
      <a href="#" class="nav-tab" data-tab="pending-documents">
        ⏰ Pending Documents
      </a>
      <!-- <a href="#" class="nav-tab" data-tab="verified-documents">
        ✅ Verified Documents
      </a> -->
      <a href="#" class="nav-tab" data-tab="upload-attendance">
        📋 Attendance
      </a>
      <a href="#" class="nav-tab" data-tab="spi-upload">
        📊 Marksheets
      </a>
    </div>

    <!-- Master DB Tab -->
    <!-- <div class="content-section tab-content" id="masterDB-documents"> -->
    <%- include("./partials/UploadMasterDBTab") %>
      <!-- </div> -->

      <!-- Pending Documents Tab -->
      <!-- <div class="content-section tab-content" id="pending-documents"> -->
      <%- include("./partials/VerificationTab") %>
        <!-- </div> -->

        <!-- Verified Documents Tab -->
        <!-- <div class="content-section tab-content" id="verified-documents"> -->
        <!-- <%- include("./partials/VerifiedDocumentTab") %> -->
        <!-- </div> -->

        <!-- Attendance Upload Tab -->
        <!-- <div class="content-section tab-content" id="upload-attendance"> -->
        <%- include("./partials/UploadAttendanceTab") %>
          <!-- </div> -->

          <!-- Upload SPI / Marksheets Tab -->
          <!-- <div class="content-section tab-content" id="spi-upload"> -->
          <%- include("./partials/UploadSpiTab") %>
            <!-- </div> -->


  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Tab functionality
      const tabs = document.querySelectorAll('.nav-tab');
      const tabContents = document.querySelectorAll('.tab-content');

      function switchTab(targetTab) {
        tabs.forEach(t => t.classList.remove('active'));
        tabContents.forEach(c => c.classList.remove('active'));

        const activeTab = document.querySelector(`[data-tab="${targetTab}"]`);
        const activeContent = document.getElementById(targetTab);

        if (activeTab && activeContent) {
          activeTab.classList.add('active');
          activeContent.classList.add('active');
        }
      }

      tabs.forEach(tab => {
        tab.addEventListener('click', function (e) {
          e.preventDefault();
          const targetTab = this.getAttribute('data-tab');
          switchTab(targetTab);
        });
      });

      // Form validation
      const form = document.querySelector('.needs-validation');
      if (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        });
      }

      // Approve/Reject functionality
      function setupActionButtons() {
        document.querySelectorAll('.btn-approve').forEach(btn => {
          btn.addEventListener('click', function () {
            if (confirm('Are you sure you want to approve this document?')) {
              alert('Document approved!');
              const row = this.closest('tr');
              if (row) {
                row.style.opacity = '0.5';
                row.style.pointerEvents = 'none';
              }
            }
          });
        });

        document.querySelectorAll('.btn-reject').forEach(btn => {
          btn.addEventListener('click', function () {
            if (confirm('Are you sure you want to reject this document?')) {
              alert('Document rejected!');
              const row = this.closest('tr');
              if (row) {
                row.style.opacity = '0.5';
                row.style.pointerEvents = 'none';
              }
            }
          });
        });

        document.querySelectorAll('.btn-view').forEach(btn => {
          btn.addEventListener('click', function () {
            alert('View functionality would open document details here');
          });
        });

        document.querySelectorAll('.btn').forEach(btn => {
          if (btn.textContent.includes('Generate')) {
            btn.addEventListener('click', function () {
              alert('Marksheet generation would start here');
            });
          }
        });
      }

      // Search functionality
      function setupSearch(searchId, tbodyId) {
        const searchBox = document.getElementById(searchId);
        const tbody = document.getElementById(tbodyId);

        if (searchBox && tbody) {
          searchBox.addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const rows = tbody.querySelectorAll('tr');

            rows.forEach(row => {
              const cells = row.querySelectorAll('td');
              if (cells.length >= 2) {
                const studentId = cells[0].textContent.toLowerCase();
                const name = cells[1].textContent.toLowerCase();
                const isVisible = studentId.includes(searchTerm) || name.includes(searchTerm);
                row.style.display = isVisible ? '' : 'none';
              }
            });
          });
        }
      }

      // Filter functionality
      function setupFilter(filterId, tbodyId) {
        const filterSelect = document.getElementById(filterId);
        const tbody = document.getElementById(tbodyId);

        if (filterSelect && tbody) {
          filterSelect.addEventListener('change', function () {
            const filterValue = this.value.toLowerCase();
            const rows = tbody.querySelectorAll('tr');

            rows.forEach(row => {
              if (filterValue === '') {
                row.style.display = '';
              } else {
                const cells = row.querySelectorAll('td');
                let shouldShow = false;

                // Check different columns based on the table type
                if (filterId.includes('pending') || filterId.includes('verified')) {
                  // For document tables, check document type
                  if (cells.length >= 3) {
                    const docType = cells[2].textContent.toLowerCase();
                    shouldShow = docType.includes(filterValue);
                  }
                } else if (filterId.includes('attendance')) {
                  // For attendance table, check class
                  if (cells.length >= 3) {
                    const className = cells[2].textContent.toLowerCase();
                    shouldShow = className.includes(filterValue);
                  }
                } else if (filterId.includes('marksheets')) {
                  // For marksheets table, check semester
                  if (cells.length >= 3) {
                    const semester = cells[2].textContent.toLowerCase();
                    shouldShow = semester.includes(filterValue.replace('sem', 'semester'));
                  }
                }

                row.style.display = shouldShow ? '' : 'none';
              }
            });
          });
        }
      }

      // Initialize all functionality
      setupActionButtons();
      setupSearch('pending-search', 'pending-tbody');
      setupSearch('verified-search', 'verified-tbody');
      setupSearch('attendance-search', 'attendance-tbody');
      setupSearch('marksheets-search', 'marksheets-tbody');

      setupFilter('pending-filter', 'pending-tbody');
      setupFilter('verified-filter', 'verified-tbody');
      setupFilter('attendance-filter', 'attendance-tbody');
      setupFilter('marksheets-filter', 'marksheets-tbody');

      // Handle file upload validation
      const fileInput = document.getElementById('file');
      if (fileInput) {
        fileInput.addEventListener('change', function () {
          const file = this.files[0];
          if (file && file.type !== 'application/pdf') {
            alert('Please select a PDF file only.');
            this.value = '';
          }
        });
      }

      // Initialize with first tab active
      const firstTab = document.querySelector('.nav-tab[data-tab="masterDB-documents"]');
      if (firstTab) {
        switchTab('masterDB-documents');
      }
    });
  </script>
</body>

</html>