<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>DocuVault - Student Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#3B82F6',
            secondary: '#8B5CF6',
            accent: '#10B981',
            dark: '#1F2937',
          },
          animation: {
            'fade-in': 'fadeIn 0.5s ease-in-out',
            'slide-up': 'slideUp 0.3s ease-out',
            'pulse-slow': 'pulse 3s infinite',
          }
        }
      }
    }
  </script>
  <style>
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideUp {
      from {
        transform: translateY(20px);
        opacity: 0;
      }

      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .glass-effect {
      backdrop-filter: blur(10px);
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .gradient-bg {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .skill-hover:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
  </style>
  <link rel="stylesheet" href="/stylesheets/studentDashboard.css">

</head>

<body class="bg-gradient-to-br from-indigo-50 via-white to-purple-50 min-h-screen">
  <!-- Navigation Bar -->
  <nav class="bg-white/80 backdrop-blur-md shadow-lg border-b border-gray-200 sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center h-16">
        <div class="flex items-center space-x-3">
          <div class="bg-gradient-to-r from-blue-500 to-purple-600 p-2 rounded-lg">
            <i class="fas fa-graduation-cap text-white text-xl"></i>
          </div>
          <h1 class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            Student Portal
          </h1>
        </div>
        <div class="flex items-center space-x-4">
          <button class="p-2 rounded-full hover:bg-gray-100 transition-colors">
            <i class="fas fa-bell text-gray-600"></i>
          </button>
          <div>
            <a href="/logout"
              class="px-4 py-2 bg-red-500 text-white rounded-md shadow hover:bg-red-600 transition">Logout</a>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Profile Section -->
    <div class="bg-white rounded-3xl shadow-xl overflow-hidden mb-8 animate-fade-in">
      <!-- Header with gradient background -->
      <div class="gradient-bg px-8 py-6 relative">
        <div class="absolute top-4 right-4 flex space-x-3">
          <button onclick="openEditModal()"
            class="bg-white/20 hover:bg-white/30 backdrop-blur-md text-white px-4 py-2 rounded-xl transition-all duration-300 flex items-center space-x-2">
            <i class="fas fa-edit"></i>
            <span>Edit Details</span>
          </button>
          <button
            class="bg-white/20 hover:bg-white/30 backdrop-blur-md text-white px-4 py-2 rounded-xl transition-all duration-300 flex items-center space-x-2">
            <a href="/student/view">

              <i class="fas fa-eye"></i>
              <span>View Details</span>
            </a>
          </button>
        </div>

        <!-- Profile Top Section -->
        <div class="flex items-center space-x-6 pt-4">
          <div
            class="w-24 h-24 bg-white/20 backdrop-blur-md rounded-2xl flex items-center justify-center text-white text-2xl font-bold border border-white/30">
            JD
          </div>
          <div class="text-white">
            <h1 class="text-4xl font-bold mb-2">
              <%= student.basicDetails.fullName %>
            </h1>
            <div class="flex items-center space-x-6 text-white/90">
              <span class="flex items-center space-x-2">
                <i class="fas fa-id-card"></i>
                <span>Roll No: <%= student.studentId %></span>
              </span>
              <span class="flex items-center space-x-2">
                <i class="fas fa-university"></i>
                <span>
                  <%= student.collegeId%>
                </span>
              </span>
            </div>
          </div>
        </div>
      </div>

      <!-- Profile Content -->
      <div class="p-8">
        <!-- Profile Details Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          <!-- Left Column -->
          <div class="space-y-6">
            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
              <div class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center">
                <i class="fas fa-graduation-cap text-blue-600"></i>
              </div>
              <div>
                <div class="text-sm text-gray-500 font-medium">Course</div>
                <div class="text-lg font-semibold text-gray-900">
                  <%= student.basicDetails.course %>
                </div>
              </div>
            </div>

            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
              <div class="w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center">
                <i class="fas fa-calendar text-purple-600"></i>
              </div>
              <div>
                <div class="text-sm text-gray-500 font-medium">Year</div>
                <div class="text-lg font-semibold text-gray-900">
                  <%= student.basicDetails.year %>
                </div>
              </div>
            </div>

            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
              <div class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center">
                <i class="fas fa-birthday-cake text-green-600"></i>
              </div>
              <div>
                <div class="text-sm text-gray-500 font-medium">Date of Birth</div>
                <div class="text-lg font-semibold text-gray-900">
                  <%= student.basicDetails.dob %>
                </div>
              </div>
            </div>
          </div>

          <!-- Right Column -->
          <div class="space-y-6">
            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
              <div class="w-12 h-12 bg-red-100 rounded-xl flex items-center justify-center">
                <i class="fas fa-envelope text-red-600"></i>
              </div>
              <div>
                <div class="text-sm text-gray-500 font-medium">Email</div>
                <div class="text-lg font-semibold text-gray-900">
                  <%= student.email %>
                </div>
              </div>
            </div>

            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
              <div class="w-12 h-12 bg-yellow-100 rounded-xl flex items-center justify-center">
                <i class="fas fa-phone text-yellow-600"></i>
              </div>
              <div>
                <div class="text-sm text-gray-500 font-medium">Contact</div>
                <div class="text-lg font-semibold text-gray-900">
                  <%= student.basicDetails.contact%>
                </div>
              </div>
            </div>

            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
              <div class="w-12 h-12 bg-indigo-100 rounded-xl flex items-center justify-center">
                <i class="fas fa-map-marker-alt text-indigo-600"></i>
              </div>
              <div>
                <div class="text-sm text-gray-500 font-medium">Address</div>
                <div class="text-lg font-semibold text-gray-900">
                  <%= student.basicDetails.address %>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Skills Section -->
        <div class="mb-8">
          <h3 class="text-2xl font-bold text-gray-900 mb-4 flex items-center">
            <i class="fas fa-code text-blue-600 mr-3"></i>
            Skills
          </h3>
          <div class="flex flex-wrap gap-3">
            <span
              class="skill-hover bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-4 py-2 rounded-full font-medium transition-all duration-300 cursor-pointer">
              JavaScript
            </span>
            <span
              class="skill-hover bg-gradient-to-r from-cyan-400 to-blue-500 text-white px-4 py-2 rounded-full font-medium transition-all duration-300 cursor-pointer">
              React
            </span>
            <span
              class="skill-hover bg-gradient-to-r from-green-400 to-blue-500 text-white px-4 py-2 rounded-full font-medium transition-all duration-300 cursor-pointer">
              Python
            </span>
            <span
              class="skill-hover bg-gradient-to-r from-purple-400 to-pink-500 text-white px-4 py-2 rounded-full font-medium transition-all duration-300 cursor-pointer">
              Machine Learning
            </span>
            <span
              class="skill-hover bg-gradient-to-r from-gray-700 to-gray-900 text-white px-4 py-2 rounded-full font-medium transition-all duration-300 cursor-pointer">
              Node.js
            </span>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-4">
          <button
            class="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl">
            <i class="fas fa-file-alt"></i>
            <span>Resume Builder</span>
          </button>
          <button
            class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-800 px-6 py-3 rounded-xl font-semibold transition-all duration-300 flex items-center justify-center space-x-2 border border-gray-300">
            <i class="fas fa-download"></i>
            <span>Download Resume</span>
          </button>
        </div>
      </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="bg-white rounded-2xl shadow-lg mb-8 overflow-hidden animate-fade-in">
      <div class="flex flex-wrap border-b border-gray-200">
        <a href="#"
          class="nav-tab flex-1 sm:flex-none px-6 py-4 text-center font-semibold transition-all duration-300 bg-blue-50 text-blue-600 border-b-2 border-blue-600"
          data-tab="upload-documents">
          <i class="fas fa-upload mr-2"></i>
          Upload Document
        </a>
        <a href="#"
          class="nav-tab flex-1 sm:flex-none px-6 py-4 text-center font-semibold transition-all duration-300 text-gray-600 hover:text-blue-600 hover:bg-blue-50"
          data-tab="view-attendance">
          <i class="fas fa-clock mr-2"></i>
          Attendance
        </a>
        <a href="#"
          class="nav-tab flex-1 sm:flex-none px-6 py-4 text-center font-semibold transition-all duration-300 text-gray-600 hover:text-blue-600 hover:bg-blue-50"
          data-tab="all-documents">
          <i class="fas fa-folder mr-2"></i>
          All Documents
        </a>
        <a href="#"
          class="nav-tab flex-1 sm:flex-none px-6 py-4 text-center font-semibold transition-all duration-300 text-gray-600 hover:text-blue-600 hover:bg-blue-50"
          data-tab="view-spi">
          <i class="fas fa-chart-line mr-2"></i>
          SPI
        </a>
      </div>
    </div>

    <!-- Tab Content -->
    <div id="dashboard-content">

      <!-- Upload Document Section -->
      <div>
        <%- include("./partials/uploadDocument") %>
      </div>

      <!-- View Attendance Section -->
      <div>
        <%- include("./partials/ViewAttendance", { student: student, attendance: student.attendance }) %>
      </div>
      <!-- All Documents Section -->
      <div>
        <%- include("./partials/AllDocumentTab", { allDocs: allDocs, student: student }) %>
      </div>
      <!-- View SPI Section -->
      <div>
        <%- include("./partials/ViewSpi", { student: student, spi: student.spi }) %>
      </div>


    </div>
  </div>
  <pre>DOB Raw: <%= JSON.stringify(student.basicDetails?.dob) %></pre>
  <!-- Edit Modal -->
  <div id="editModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-3xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto animate-slide-up">
        <div class="sticky top-0 bg-white border-b border-gray-200 px-8 py-6 rounded-t-3xl">
          <div class="flex justify-between items-center">
            <div>
              <h2 class="text-2xl font-bold text-gray-900">Edit Student Details</h2>
              <p class="text-gray-600 mt-1">Make changes to your profile information</p>
            </div>
            <button onclick="closeEditModal()"
              class="w-10 h-10 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-colors">
              <i class="fas fa-times text-gray-600"></i>
            </button>
          </div>
        </div>

        <form class="p-8 space-y-6" method="POST" action="/student/edit-data">
          <!-- Row 1: Name + Student ID -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
              <input type="text" name="fullName"
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                value="<%= student.basicDetails?.fullName || '' %>" placeholder="Enter full name">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Roll No (Student ID)</label>
              <input type="text" name="studentId"
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                value="<%= student.studentId || '' %>" placeholder="Enter roll no">
            </div>
          </div>

          <!-- Row 2: College ID + DOB -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">College ID</label>
              <select class="form-select" id="collegeId" name="collegeId">
                <option value="">Select your college</option>
                <option value="JMI" <%=student.collegeId==='JMI' ? 'selected' : '' %>>Jamia Millia Islamia (JMI)
                </option>
                <option value="AMU" <%=student.collegeId==='AMU' ? 'selected' : '' %>>Aligarh Muslim University (AMU)
                </option>
                <option value="DU" <%=student.collegeId==='DU' ? 'selected' : '' %>>Delhi University (DU)</option>
                <option value="JNU" <%=student.collegeId==='JNU' ? 'selected' : '' %>>Jawaharlal Nehru University (JNU)
                </option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Date of Birth</label>
              <input type="date" class="form-input" id="edit-dob" name="dob"
                value="<%= student.basicDetails?.dob ? student.basicDetails.dob.toISOString().substring(0,10) : '' %>">
            </div>
          </div>

          <!-- Row 3: Course + Year -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Course</label>
              <select class="form-select" id="edit-course" name="course">
                <option value="">Select your course</option>
                <option value="BTECH_CSE" <%=student.basicDetails?.course==='BTECH_CSE' ? 'selected' : '' %>>B.Tech
                  Computer Science Engineering</option>
                <option value="BTECH_ECE" <%=student.basicDetails?.course==='BTECH_ECE' ? 'selected' : '' %>>B.Tech
                  Electronics and Communication Engineering</option>
                <option value="BTECH_ME" <%=student.basicDetails?.course==='BTECH_ME' ? 'selected' : '' %>>B.Tech
                  Mechanical Engineering</option>
                <option value="BSC_CS" <%=student.basicDetails?.course==='BSC_CS' ? 'selected' : '' %>>B.Sc Computer
                  Science</option>
                <option value="MBA" <%=student.basicDetails?.course==='MBA' ? 'selected' : '' %>>Master of Business
                  Administration</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Year</label>
              <input type="number" name="year"
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                value="<%= student.basicDetails?.year || '' %>" placeholder="e.g. 3">
            </div>
          </div>

          <!-- Row 4: Contact + Email -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Contact Number</label>
              <input type="text" name="contact"
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                value="<%= student.basicDetails?.contact || '' %>" placeholder="Enter contact number">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
              <input type="email" name="email"
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                value="<%= student.email || '' %>" placeholder="Enter email">
            </div>
          </div>

          <!-- Address -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Address</label>
            <textarea name="address"
              class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
              rows="3" placeholder="Enter address"><%= student.basicDetails?.address || '' %></textarea>
          </div>

          <!-- Skills Section (use hidden inputs for submission) -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Skills</label>
            <div class="flex space-x-2 mb-3">
              <input type="text" id="skill-input"
                class="flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                placeholder="Add a skill">
              <button type="button" onclick="addSkill()"
                class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-xl font-semibold transition-colors">
                <i class="fas fa-plus"></i>
              </button>
            </div>
            <div id="modal-skills" class="flex flex-wrap gap-2">
              <% student.skills.forEach(skill=> { %>
                <div
                  class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium flex items-center space-x-2">
                  <span>
                    <%= skill %>
                  </span>
                  <button type="button" onclick="removeSkill(this)" class="text-blue-600 hover:text-blue-800">
                    <i class="fas fa-times"></i>
                  </button>
                  <input type="hidden" name="skills[]" value="<%= skill %>">
                </div>
                <% }) %>
            </div>
          </div>

          <!-- Action Buttons -->
          <div class="flex flex-col sm:flex-row gap-4 pt-6 border-t border-gray-200">
            <button type="button" onclick="closeEditModal()"
              class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-800 px-6 py-3 rounded-xl font-semibold transition-colors">
              Cancel
            </button>
            <button type="submit"
              class="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 shadow-lg hover:shadow-xl">
              Save Changes
            </button>
          </div>
        </form>

      </div>
    </div>
  </div>

  <script>
    // Modal functions
    function openEditModal() {
      document.getElementById('editModal').classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }

    function closeEditModal() {
      document.getElementById('editModal').classList.add('hidden');
      document.body.style.overflow = 'auto';
    }

    // Close modal when clicking outside
    document.getElementById('editModal').addEventListener('click', function (e) {
      if (e.target === this) {
        closeEditModal();
      }
    });

    // Tab functionality
    const tabs = document.querySelectorAll('.nav-tab');
    const tabContents = document.querySelectorAll('.tab-content');

    function switchTab(targetTab) {
      // Remove active class from all tabs
      tabs.forEach(tab => {
        tab.classList.remove('bg-blue-50', 'text-blue-600', 'border-b-2', 'border-blue-600');
        tab.classList.add('text-gray-600', 'hover:text-blue-600', 'hover:bg-blue-50');
      });

      // Hide all tab contents
      tabContents.forEach(content => {
        content.classList.add('hidden');
        content.classList.remove('active');
      });

      // Activate clicked tab
      const activeTab = document.querySelector(`[data-tab="${targetTab}"]`);
      const activeContent = document.getElementById(targetTab);

      if (activeTab && activeContent) {
        activeTab.classList.add('bg-blue-50', 'text-blue-600', 'border-b-2', 'border-blue-600');
        activeTab.classList.remove('text-gray-600', 'hover:text-blue-600', 'hover:bg-blue-50');

        activeContent.classList.remove('hidden');
        activeContent.classList.add('active');
      }
    }

    tabs.forEach(tab => {
      tab.addEventListener('click', function (e) {
        e.preventDefault();
        const targetTab = this.getAttribute('data-tab');
        switchTab(targetTab);
      });
    });

    // Skills management
    function addSkill() {
      const skillInput = document.getElementById('skill-input');
      const skillValue = skillInput.value.trim();

      if (skillValue === '') return;

      const skillsContainer = document.getElementById('modal-skills');
      const colors = ['blue', 'green', 'purple', 'red', 'yellow', 'indigo', 'pink'];
      const randomColor = colors[Math.floor(Math.random() * colors.length)];

      const skillElement = document.createElement('div');
      skillElement.className = `bg-${randomColor}-100 text-${randomColor}-800 px-3 py-1 rounded-full text-sm font-medium flex items-center space-x-2`;
      skillElement.innerHTML = `
                <span>${skillValue}</span>
                <button type="button" onclick="removeSkill(this)" class="text-${randomColor}-600 hover:text-${randomColor}-800">
                    <i class="fas fa-times"></i>
                </button>
            `;

      skillsContainer.appendChild(skillElement);
      skillInput.value = '';
    }

    function removeSkill(button) {
      button.closest('div').remove();
    }

    // Add skill on Enter key press
    document.getElementById('skill-input').addEventListener('keypress', function (e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        addSkill();
      }
    });

    // Resume builder and download functionality
    document.querySelector('.btn-primary').addEventListener('click', () => {
      alert('Resume Builder functionality would be implemented here!');
    });

    document.querySelector('.btn-secondary').addEventListener('click', () => {
      alert('Resume download functionality would be implemented here!');
    });

    // Smooth scrolling for internal links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });

    // Add loading states for buttons
    function addLoadingState(button) {
      const originalText = button.innerHTML;
      button.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Loading...';
      button.disabled = true;

      setTimeout(() => {
        button.innerHTML = originalText;
        button.disabled = false;
      }, 2000);
    }

    // Add hover effects and interactions
    document.addEventListener('DOMContentLoaded', function () {
      // Add smooth transitions to all interactive elements
      const interactiveElements = document.querySelectorAll('button, .nav-tab, .skill-hover');
      interactiveElements.forEach(el => {
        el.style.transition = 'all 0.3s ease';
      });

      // Animate elements on scroll
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);

      // Observe elements for animation
      document.querySelectorAll('.animate-fade-in').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        observer.observe(el);
      });
    });

    // Form validation
    function validateForm() {
      const requiredFields = document.querySelectorAll('input[required], select[required]');
      let isValid = true;

      requiredFields.forEach(field => {
        if (!field.value.trim()) {
          field.classList.add('border-red-500');
          isValid = false;
        } else {
          field.classList.remove('border-red-500');
        }
      });

      return isValid;
    }

    // Enhanced file upload functionality
    function setupFileUpload() {
      const uploadArea = document.querySelector('.border-dashed');

      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        uploadArea.addEventListener(eventName, preventDefaults, false);
      });

      function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
      }

      ['dragenter', 'dragover'].forEach(eventName => {
        uploadArea.addEventListener(eventName, highlight, false);
      });

      ['dragleave', 'drop'].forEach(eventName => {
        uploadArea.addEventListener(eventName, unhighlight, false);
      });

      function highlight(e) {
        uploadArea.classList.add('border-blue-400', 'bg-blue-50');
      }

      function unhighlight(e) {
        uploadArea.classList.remove('border-blue-400', 'bg-blue-50');
      }

      uploadArea.addEventListener('drop', handleDrop, false);

      function handleDrop(e) {
        const dt = e.dataTransfer;
        const files = dt.files;
        handleFiles(files);
      }

      function handleFiles(files) {
        [...files].forEach(file => {
          console.log('File uploaded:', file.name);
          // Here you would implement actual file upload logic
        });
      }
    }

    // Initialize file upload functionality
    setupFileUpload();
  </script>
</body>

</html>